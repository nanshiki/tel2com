# UART ポート設定
# UART のポート (/dev/ttyS*等) は dialout グループなので、
# 一般ユーザーの場合は使用したいユーザーを dialout グループに追加する
[COM]
# デバイス名 /dev は省略可
name=ttyAMA0
# 速度
speed=38400
# データビット数
data=8
# ストップビット数
stop=1
# パリティ (none/odd/even)
parity=none
# RTS/CTS 使用の場合は hard
flow=none
# モデムエミュレーション (off/on)
# off の場合、これ以降の UART 設定は使用されない
modem=on
# RING 送信回数
# 0 で送信しない
ring=2
# RING 送信間隔 単位:ms
ring_interval=1000
# 接続モード (none/ata/ring)
# ata はホストプログラムからの ATA 受信時に接続
# ring は RING 送出回数終了で接続
connect=ATA
# ATA 受信後 CONNECT 送信までの時間 単位:ms
# MPNBBS の場合 2000 以上を設定する
connect_interval=0
# フロー制御 (none/hard)
# DSR OFF で telnet 側を切断 (off/on)
# on で切断する
dsr_cut=on
# DTR 信号に使用する wiringPi ピン番号 (16)
dtr_pin=4
# DTR ON の場合の GPIO 状態 (low/high)
dtr_on=low
# DSR 信号に使用する wiringPi ピン番号 (18)
dsr_pin=5
# DSR ON の場合の GPIO 状態 (low/high)
dsr_on=low

# telnet 回線設定
[telnet]
# ポート番号
# 1024 以下のポート番号は root でないと起動できない場合があるので注意
port=23
# telnet コマンド有効 (on/off)
# on の場合、接続時に telnet コマンドの送信を行い IAC(0xff) 受信時の処理も行う
command=on

# 時間設定
[time]
# 無通信状態での切断判定時間 単位:秒
# 0 で切断しない
no_comm=0
# 接続制限時間 単位:秒
# 0 で制限時間なし
limit=0
# 切断検知後の回線保持時間 単位:秒
# 0 で保持しない
keep=10

# 文字列
# \r は CR、\n は LF、\t は TAB に変換される
[text]
# 切断検知文字列(UART 側から受信した文字列で判定)
cut1=
cut2=
# telnet 回線切断後 UART 側に送信する文字列
after=
# 回線満杯時の telnet 側への送信文字列
full=他のユーザーが接続中で回線に空きがありません。\r\n
# 判定・出力文字列の文字コード (shiftjis/euc)
# このファイルは UTF-8 で、下記の設定で文字コードを変換して使用する
code=shiftjis
